name: Deploy Lambda

on:
  push:
    paths:
      - 'part3-cicd/task3-lambda-deploy/**'
      - '.github/workflows/lambda-deploy.yml'
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: part3-cicd/task3-lambda-deploy
        shell: bash
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        mkdir -p package
        # Install dependencies into the package directory
        pip install -r ../../part3-cicd/task3-lambda-deploy/requirements.txt -t ./package
        cp ../../part3-cicd/task3-lambda-deploy/lambda_function.py ./package
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 ../../part3-cicd/task3-lambda-deploy/lambda_function.py

    - name: Lint with pylint
      run: |
        pip install pylint
        pylint ../../part3-cicd/task3-lambda-deploy/lambda_function.py

    - name: Install pytest
      run: |
        pip install pytest
      working-directory: part3-cicd/task3-lambda-deploy
    
    - name: Trivy filesystem scan
      uses: aquasecurity/trivy-action@master
      with:
        format: 'table'
        scan-type: 'fs'
        scan-ref: '.'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH,MEDIUM'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run unit tests
      run: |
        export PYTHONPATH=${PYTHONPATH}:$(pwd)
        pytest tests
      working-directory: part3-cicd/task3-lambda-deploy

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init
      working-directory: part3-cicd/task3-lambda-deploy
      shell: bash
  
    - name: Check Terraform Format
      run: terraform fmt -check

    - name: tfsec iac
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        format: 'json'
        soft_fail: true
        version: 'latest'
        working-directory: part3-cicd/task3-lambda-deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 🔍 Checkov IaC Scan
      uses: bridgecrewio/checkov-action@v12.2546.0
      with:
        directory: part3-cicd/task3-lambda-deploy
        framework: terraform
        soft_fail: true
    - name: Save Checkov Report
      run: |
        pip install checkov
        checkov -d . --soft-fail -o json > checkov-report.json

    - name: Upload Checkov Report
      uses: actions/upload-artifact@v4
      with:
        name: checkov-report
        path: part3-cicd/task3-lambda-deploy/checkov-report.json
  

    - name: Zip and deploy
      run: |
        cd package
        zip -r ../output.zip .
      shell: bash
    # - name: Debug output.zip location
    #   run: |
    #     ls -lh
    #     file output.zip
    #     echo "Output zip file created at: $(pwd)/output.zip"
    # - name: Upload output.zip
    #   run: |
    #     echo "Ensuring output.zip is available..."
    #     if [ -f "output.zip" ]; then
    #       echo "output.zip exists and is ready for deployment."
    #     else
    #       echo "Error: output.zip not found!"
    #       exit 1
    #     fi
    - name: Save Trivy Report
      run: |
        trivy fs . --format json -o trivy-report.json
        echo "Trivy report saved to trivy-report.json"

    - name: Upload Trivy Report
      # Upload the Trivy report as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: part3-cicd/task3-lambda-deploy/trivy-report.json

    - name: Deploy to Lambda
      uses: appleboy/lambda-action@v0.2.0
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: ${{ secrets.AWS_REGION }}
        function_name: afam-financial-lambda
        zip_file: /home/runner/work/teksystems_deployment_challenge/teksystems_deployment_challenge/part3-cicd/task3-lambda-deploy/output.zip
        publish: true
